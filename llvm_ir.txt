declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@oneDimensionalArray = dso_local global [5 x i32]zeroinitializer
@twoDimensionalArray = dso_local global [5 x [5 x i32]]zeroinitializer

define dso_local i32 @copyArray1D(i32* %0) #0 {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca i32
store i32 0, i32* %3
br label %4
4:
%5 = load i32, i32* %3
%6 = icmp slt i32 %5, 5
%7 = zext i1 %6 to i32
%8 = icmp ne i32 %7, 0
br i1 %8,label %9,label %19
9:
%10 = load i32*, i32** %2
%11 = load i32, i32* %3
%12 = getelementptr i32, i32* %10,i32 %11
%13 = load i32, i32* %12
%14 = load i32, i32* %3
%15 = getelementptr [5 x i32], [5 x i32]* @oneDimensionalArray,i32 0,i32 %14
store i32 %13, i32* %15
br label %16
16:
%17 = load i32, i32* %3
%18 = add i32 %17, 1
store i32 %18, i32* %3
br label %4
19:
ret i32 1
}

define dso_local i32 @copyArray2D([5 x i32] *%0) #0 {
%2 = alloca [5 x i32]*
store [5 x i32]* %0, [5 x i32]** %2
%3 = alloca i32
%4 = alloca i32
store i32 0, i32* %4
store i32 0, i32* %3
br label %5
5:
%6 = load i32, i32* %3
%7 = icmp slt i32 %6, 5
%8 = zext i1 %7 to i32
%9 = icmp ne i32 %8, 0
br i1 %9,label %10,label %32
10:
store i32 0, i32* %4
br label %11
11:
%12 = load i32, i32* %4
%13 = icmp slt i32 %12, 5
%14 = zext i1 %13 to i32
%15 = icmp ne i32 %14, 0
br i1 %15,label %16,label %28
16:
%17 = load [5 x i32]*, [5 x i32]** %2
%18 = load i32, i32* %3
%19 = load i32, i32* %4
%20 = getelementptr [5 x i32], [5 x i32]* %17,i32 %18,i32 %19
%21 = load i32, i32* %20
%22 = load i32, i32* %3
%23 = load i32, i32* %4
%24 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @twoDimensionalArray,i32 0,i32 %22,i32 %23
store i32 %21, i32* %24
br label %25
25:
%26 = load i32, i32* %4
%27 = add i32 %26, 1
store i32 %27, i32* %4
br label %11
28:
br label %29
29:
%30 = load i32, i32* %3
%31 = add i32 %30, 1
store i32 %31, i32* %3
br label %5
32:
ret i32 1
}

define dso_local void @copy1DInto2D(i32* %0,i32 %1) #0 {
%3 = alloca i32*
store i32* %0, i32** %3
%4 = alloca i32
store i32 %1, i32* %4
%5 = alloca i32
store i32 0, i32* %5
br label %6
6:
%7 = load i32, i32* %5
%8 = icmp slt i32 %7, 5
%9 = zext i1 %8 to i32
%10 = icmp ne i32 %9, 0
br i1 %10,label %11,label %22
11:
%12 = load i32*, i32** %3
%13 = load i32, i32* %5
%14 = getelementptr i32, i32* %12,i32 %13
%15 = load i32, i32* %14
%16 = load i32, i32* %4
%17 = load i32, i32* %5
%18 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @twoDimensionalArray,i32 0,i32 %16,i32 %17
store i32 %15, i32* %18
br label %19
19:
%20 = load i32, i32* %5
%21 = add i32 %20, 1
store i32 %21, i32* %5
br label %6
22:
ret void
}

define dso_local i32 @main() #0 {
call void @putch(i32 50)
call void @putch(i32 49)
call void @putch(i32 51)
call void @putch(i32 55)
call void @putch(i32 51)
call void @putch(i32 52)
call void @putch(i32 53)
call void @putch(i32 55)
call void @putch(i32 10)
%1 = alloca i32
%2 = alloca i32
%3 = alloca [5 x i32]
%4 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 0
store i32 0, i32* %4
%5 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 1
store i32 1, i32* %5
%6 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 2
store i32 2, i32* %6
%7 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 3
store i32 3, i32* %7
%8 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 4
store i32 4, i32* %8
%9 = alloca [5 x [5 x i32]]
%10 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 0
store i32 0, i32* %10
%11 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 1
store i32 1, i32* %11
%12 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 2
store i32 2, i32* %12
%13 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 3
store i32 3, i32* %13
%14 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 4
store i32 4, i32* %14
%15 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 1,i32 0
store i32 10, i32* %15
%16 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 1,i32 1
store i32 11, i32* %16
%17 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 1,i32 2
store i32 12, i32* %17
%18 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 1,i32 3
store i32 13, i32* %18
%19 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 1,i32 4
store i32 14, i32* %19
%20 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 2,i32 0
store i32 20, i32* %20
%21 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 2,i32 1
store i32 21, i32* %21
%22 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 2,i32 2
store i32 22, i32* %22
%23 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 2,i32 3
store i32 23, i32* %23
%24 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 2,i32 4
store i32 24, i32* %24
%25 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 3,i32 0
store i32 30, i32* %25
%26 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 3,i32 1
store i32 31, i32* %26
%27 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 3,i32 2
store i32 32, i32* %27
%28 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 3,i32 3
store i32 33, i32* %28
%29 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 3,i32 4
store i32 34, i32* %29
%30 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 4,i32 0
store i32 40, i32* %30
%31 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 4,i32 1
store i32 41, i32* %31
%32 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 4,i32 2
store i32 42, i32* %32
%33 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 4,i32 3
store i32 43, i32* %33
%34 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 4,i32 4
store i32 44, i32* %34
%35 = getelementptr [5 x i32], [5 x i32]* %3,i32 0,i32 0
%36 = call i32 @copyArray1D(i32* %35)
%37 = icmp ne i32 %36, 0
br i1 %37,label %38,label %76
38:
store i32 0, i32* %1
br label %39
39:
%40 = load i32, i32* %1
%41 = icmp slt i32 %40, 5
%42 = zext i1 %41 to i32
%43 = icmp ne i32 %42, 0
br i1 %43,label %44,label %57
44:
%45 = load i32, i32* %1
%46 = getelementptr [5 x i32], [5 x i32]* @oneDimensionalArray,i32 0,i32 %45
%47 = load i32, i32* %46
%48 = load i32, i32* %1
%49 = icmp ne i32 %47, %48
%50 = zext i1 %49 to i32
%51 = icmp ne i32 %50, 0
br i1 %51,label %52,label %53
52:
br label %57
53:
br label %54
54:
%55 = load i32, i32* %1
%56 = add i32 %55, 1
store i32 %56, i32* %1
br label %39
57:
%58 = load i32, i32* %1
%59 = icmp eq i32 %58, 5
%60 = zext i1 %59 to i32
%61 = icmp ne i32 %60, 0
br i1 %61,label %62,label %75
62:
call void @putch(i32 49)
call void @putch(i32 68)
call void @putch(i32 32)
call void @putch(i32 97)
call void @putch(i32 114)
call void @putch(i32 114)
call void @putch(i32 97)
call void @putch(i32 121)
call void @putch(i32 32)
call void @putch(i32 102)
call void @putch(i32 117)
call void @putch(i32 110)
call void @putch(i32 99)
call void @putch(i32 116)
call void @putch(i32 105)
call void @putch(i32 111)
call void @putch(i32 110)
call void @putch(i32 32)
call void @putch(i32 112)
call void @putch(i32 97)
call void @putch(i32 115)
call void @putch(i32 115)
call void @putch(i32 33)
call void @putch(i32 10)
%63 = alloca i32
store i32 1, i32* %63
br label %64
64:
%65 = load i32, i32* %63
%66 = icmp slt i32 %65, 1000
%67 = zext i1 %66 to i32
%68 = icmp ne i32 %67, 0
br i1 %68,label %69,label %73
69:
%70 = load i32, i32* %63
%71 = mul i32 %70, 2
store i32 %71, i32* %63
br label %72
72:
br label %64
73:
%74 = load i32, i32* %63
call void @putint(i32 %74)
call void @putch(i32 10)
br label %75
75:
br label %76
76:
%77 = alloca i32
store i32 1, i32* %77
br label %78
78:
%79 = load i32, i32* %77
%80 = icmp slt i32 %79, 1000
%81 = zext i1 %80 to i32
%82 = icmp ne i32 %81, 0
br i1 %82,label %83,label %87
83:
%84 = load i32, i32* %77
%85 = mul i32 %84, 2
store i32 %85, i32* %77
br label %86
86:
br label %78
87:
%88 = load i32, i32* %77
call void @putint(i32 %88)
call void @putch(i32 10)
%89 = alloca i32
store i32 1, i32* %89
br label %90
90:
%91 = load i32, i32* %89
%92 = icmp slt i32 %91, 1000
%93 = zext i1 %92 to i32
%94 = icmp ne i32 %93, 0
br i1 %94,label %95,label %99
95:
%96 = load i32, i32* %89
%97 = mul i32 %96, 2
store i32 %97, i32* %89
br label %98
98:
br label %90
99:
%100 = load i32, i32* %89
call void @putint(i32 %100)
call void @putch(i32 10)
%101 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0
%102 = call i32 @copyArray2D([5 x i32]* %101)
%103 = icmp ne i32 %102, 0
br i1 %103,label %104,label %156
104:
store i32 0, i32* %1
br label %105
105:
%106 = load i32, i32* %1
%107 = icmp slt i32 %106, 5
%108 = zext i1 %107 to i32
%109 = icmp ne i32 %108, 0
br i1 %109,label %110,label %143
110:
store i32 0, i32* %2
br label %111
111:
%112 = load i32, i32* %2
%113 = icmp slt i32 %112, 5
%114 = zext i1 %113 to i32
%115 = icmp ne i32 %114, 0
br i1 %115,label %116,label %133
116:
%117 = load i32, i32* %1
%118 = load i32, i32* %2
%119 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @twoDimensionalArray,i32 0,i32 %117,i32 %118
%120 = load i32, i32* %119
%121 = load i32, i32* %1
%122 = mul i32 %121, 10
%123 = load i32, i32* %2
%124 = add i32 %122, %123
%125 = icmp ne i32 %120, %124
%126 = zext i1 %125 to i32
%127 = icmp ne i32 %126, 0
br i1 %127,label %128,label %129
128:
br label %133
129:
br label %130
130:
%131 = load i32, i32* %2
%132 = add i32 %131, 1
store i32 %132, i32* %2
br label %111
133:
%134 = load i32, i32* %2
%135 = icmp ne i32 %134, 5
%136 = zext i1 %135 to i32
%137 = icmp ne i32 %136, 0
br i1 %137,label %138,label %139
138:
br label %143
139:
br label %140
140:
%141 = load i32, i32* %1
%142 = add i32 %141, 1
store i32 %142, i32* %1
br label %105
143:
%144 = load i32, i32* %1
%145 = icmp eq i32 %144, 5
%146 = zext i1 %145 to i32
%147 = icmp ne i32 %146, 0
br i1 %147,label %148,label %155
148:
%149 = load i32, i32* %2
%150 = icmp eq i32 %149, 5
%151 = zext i1 %150 to i32
%152 = icmp ne i32 %151, 0
br i1 %152,label %153,label %154
153:
call void @putch(i32 50)
call void @putch(i32 68)
call void @putch(i32 32)
call void @putch(i32 97)
call void @putch(i32 114)
call void @putch(i32 114)
call void @putch(i32 97)
call void @putch(i32 121)
call void @putch(i32 32)
call void @putch(i32 102)
call void @putch(i32 117)
call void @putch(i32 110)
call void @putch(i32 99)
call void @putch(i32 116)
call void @putch(i32 105)
call void @putch(i32 111)
call void @putch(i32 110)
call void @putch(i32 32)
call void @putch(i32 112)
call void @putch(i32 97)
call void @putch(i32 115)
call void @putch(i32 115)
call void @putch(i32 33)
call void @putch(i32 10)
br label %154
154:
br label %155
155:
br label %156
156:
%157 = alloca i32
store i32 1, i32* %157
br label %158
158:
%159 = load i32, i32* %157
%160 = icmp slt i32 %159, 1000
%161 = zext i1 %160 to i32
%162 = icmp ne i32 %161, 0
br i1 %162,label %163,label %167
163:
%164 = load i32, i32* %157
%165 = mul i32 %164, 2
store i32 %165, i32* %157
br label %166
166:
br label %158
167:
%168 = load i32, i32* %157
call void @putint(i32 %168)
call void @putch(i32 10)
%169 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %9,i32 0,i32 0,i32 0
call void @copy1DInto2D(i32* %169, i32 1)
store i32 0, i32* %1
br label %170
170:
%171 = load i32, i32* %1
%172 = icmp slt i32 %171, 5
%173 = zext i1 %172 to i32
%174 = icmp ne i32 %173, 0
br i1 %174,label %175,label %188
175:
%176 = load i32, i32* %1
%177 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @twoDimensionalArray,i32 0,i32 1,i32 %176
%178 = load i32, i32* %177
%179 = load i32, i32* %1
%180 = icmp ne i32 %178, %179
%181 = zext i1 %180 to i32
%182 = icmp ne i32 %181, 0
br i1 %182,label %183,label %184
183:
br label %188
184:
br label %185
185:
%186 = load i32, i32* %1
%187 = add i32 %186, 1
store i32 %187, i32* %1
br label %170
188:
%189 = alloca i32
store i32 1, i32* %189
br label %190
190:
%191 = load i32, i32* %189
%192 = icmp slt i32 %191, 1000
%193 = zext i1 %192 to i32
%194 = icmp ne i32 %193, 0
br i1 %194,label %195,label %199
195:
%196 = load i32, i32* %189
%197 = mul i32 %196, 2
store i32 %197, i32* %189
br label %198
198:
br label %190
199:
%200 = load i32, i32* %189
call void @putint(i32 %200)
call void @putch(i32 10)
%201 = load i32, i32* %1
%202 = icmp eq i32 %201, 5
%203 = zext i1 %202 to i32
%204 = icmp ne i32 %203, 0
br i1 %204,label %205,label %206
205:
call void @putch(i32 49)
call void @putch(i32 68)
call void @putch(i32 32)
call void @putch(i32 97)
call void @putch(i32 114)
call void @putch(i32 114)
call void @putch(i32 97)
call void @putch(i32 121)
call void @putch(i32 32)
call void @putch(i32 105)
call void @putch(i32 110)
call void @putch(i32 32)
call void @putch(i32 50)
call void @putch(i32 68)
call void @putch(i32 32)
call void @putch(i32 97)
call void @putch(i32 114)
call void @putch(i32 114)
call void @putch(i32 97)
call void @putch(i32 121)
call void @putch(i32 32)
call void @putch(i32 102)
call void @putch(i32 117)
call void @putch(i32 110)
call void @putch(i32 99)
call void @putch(i32 116)
call void @putch(i32 105)
call void @putch(i32 111)
call void @putch(i32 110)
call void @putch(i32 32)
call void @putch(i32 112)
call void @putch(i32 97)
call void @putch(i32 115)
call void @putch(i32 115)
call void @putch(i32 33)
call void @putch(i32 10)
br label %206
206:
call void @putch(i32 84)
call void @putch(i32 101)
call void @putch(i32 115)
call void @putch(i32 116)
call void @putch(i32 50)
call void @putch(i32 32)
call void @putch(i32 83)
call void @putch(i32 117)
call void @putch(i32 99)
call void @putch(i32 99)
call void @putch(i32 101)
call void @putch(i32 115)
call void @putch(i32 115)
call void @putch(i32 33)
ret i32 0
}
